---
- name: Check if {{ docker_dir }}/{{ container_name }} directory exists
  stat:
    path: "{{ docker_dir }}/{{ container_name }}"
  register: config_dir

- name: Create {{ docker_dir }}/{{ container_name }} directory if it doesn't already exist
  file:
    path: "{{ docker_dir }}/{{ container_name }}/docker-venv"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  when: not config_dir.stat.exists

- name: Create {{ docker_dir }}/{{ container_name }} directory if it doesn't already exist
  file:
    path: "{{ docker_dir }}/{{ container_name }}/config"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  when: not config_dir.stat.exists

- name: Git clone homeassistant-docker-venv
  ansible.builtin.git:
    repo: "https://github.com/tribut/homeassistant-docker-venv"
    dest: "{{ docker_dir }}/{{ container_name }}/docker-venv"
    update: yes

# - name: Remove home-assistant docker container
#   docker_container:
#     name: home-assistant
#     state: absent

- name: Ensure that the {{ container_name }} container is created and running
  docker_container:
    name: homeassistant
    image: homeassistant/home-assistant:stable
    state: started
    pull: yes
    restart: yes
    restart_policy: unless-stopped
    network_mode: host
    env:
      PUID={{ ansible_user_uid }}
      PGID={{ ansible_user_uid }}
      TZ={{ timezone }}
      PACKAGES=iputils
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/config:/config"
      - "{{ docker_dir }}/{{ container_name }}/docker-venv/run:/etc/services.d/home-assistant/run"
    labels:
      "flame.type": "application"
      "flame.name": "{{ flame.name }}"
      "flame.url": "{{ flame.url }}"
      "flame.icon": "{{ flame.icon }}"
