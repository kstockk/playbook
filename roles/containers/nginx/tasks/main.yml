---
- name: Check if {{ docker_dir }}/{{ container_name }} directory exists
  stat:
    path: "{{ docker_dir }}/{{ container_name }}/config.json"
  register: docker_data

- name: Create requiries directories and files
  block:
  - name: Create {{ docker_dir }}/{{ container_name }} directory
    file:
      path: "{{ docker_dir }}/{{ container_name }}/{{ item }}"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: "0755"
    with_items:
      - "data"
      - "letsencrypt"
  - name: Create ngnix config.json
    file:
      path: "{{ docker_dir }}/{{ container_name }}/config.json"
      state: touch
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: "0644"
  when: not docker_data.stat.exists

- name: Ensure that the {{ container_name }} network is created and running
  docker_network:
    name: "{{ container_name }}"

- name: Fetch OP Secret
  onepassword.connect.field_info:
    item: "Nginx Proxy Manager"
    section: "MySQL Database"
    field: "password"
    vault: "{{ op_vault }}"
  no_log: true
  register: db_root_password

- name: Fetch OP Secret
  onepassword.connect.field_info:
    item: "Nginx Proxy Manager"
    section: "MySQL Database"
    field: "root password"
    vault: "{{ op_vault }}"
  no_log: true
  register: db_password

- name: Ensure that the {{ container_name }} MariaDB container is created and running
  docker_container:
    name: "nginx-mariadb"
    image: "{{ docker_image }}"
    pull: yes
    state: 'started'
    env:
      "MYSQL_ROOT_PASSWORD": "{{ db_root_password.field.value }}"
      "MYSQL_DATABASE": "npm"
      "MYSQL_USER": "npm"
      "MYSQL_PASSWORD": "{{ db_password.field.value }}"
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/mysql:/var/lib/mysql"
    restart_policy: unless-stopped
    networks:
      - name: "{{ container_name }}"

- name: Ensure that the {{ container_name }} container is created and running
  docker_container:
    name: "{{ container_name }}"
    image: jc21/nginx-proxy-manager:latest
    pull: yes
    ports: 
      - "80:80"
      - "443:443"
      - "81:81"
    state: 'started'
    env:
      "DB_MYSQL_HOST": "nginx-mariadb"
      "DB_MYSQL_PORT": "3306"
      "DB_MYSQL_USER": "npm"
      "DB_MYSQL_PASSWORD": "{{ db_password.field.value }}"
      "DB_MYSQL_NAME": "npm"
      "DISABLE_IPV6": 'true'
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/data:/data"
      - "{{ docker_dir }}/{{ container_name }}/config.json:/app/config/production.json"
      - "{{ docker_dir }}/{{ container_name }}/letsencrypt:/letsencrypt"
    restart_policy: unless-stopped
    networks:
      - name: "{{ container_name }}"
    links:
      - "nginx-mariadb"
    labels:
      "flame.type": "application"
      "flame.name": "{{ flame.name }}"
      "flame.url": "{{ flame.url }}"
      "flame.icon": "{{ flame.icon }}"